import java.util.*;
class Solution {
    public int solution(int[][] jobs) {
        int answer = 0;
        Arrays.sort(jobs,new Comparator<int[]>(){
            @Override
            public int compare(int[] o1, int[] o2){
                if(o1[0]==o2[0]){
                    return o1[1]-o2[1];
                }
                return o1[0]-o2[0];
            }
        });
        PriorityQueue<int[]> pq = new PriorityQueue<>((o1,o2)->o1[1]-o2[1]); 
        int count=0;
        int index=0;
        int end=0;
        while(count<jobs.length){
            while(index<jobs.length&&jobs[index][0]<=end){
                pq.add(jobs[index]);
                index++;
                if (index == jobs.length) break;
            }
            if(pq.isEmpty()&&index<jobs.length){
                pq.add(jobs[index]);
                end=jobs[index][0];
                index++;
            }
            if(!pq.isEmpty()){
                int[] now = pq.poll();
                answer+=end+now[1]-now[0];
                end+=now[1];
                count++;
            }
        }
        
        return answer/jobs.length;
    }
}