class Solution {
    static boolean[][][] visit;
    static int[] dx={-1,1,0,0};//위,아래,오,왼
    static int[] dy={0,0,1,-1};
    static int answer;
    public int solution(String dirs) {
        answer = 0;
        visit=new boolean[11][11][4];
        trip(dirs,5,5);
        return answer;
    }
    static void trip(String dirs, int sx, int sy){
        for(int i=0; i<dirs.length(); i++){
            char c = dirs.charAt(i);
            int go = 0;
            if(c=='D') go=1;
            else if(c=='R') go=2;
            else if(c=='L') go=3;
            int nx = sx+dx[go];
            int ny = sy+dy[go];
            if(nx>=0&&ny>=0&&nx<11&&ny<11){
                if(!visit[sx][sy][go]){
                    int newgo=0;
                    if(go==0) newgo=1;
                    else if(go==2) newgo=3;
                    else if(go==3) newgo=2;
                    if(!visit[nx][ny][newgo]){
                        answer++;
                        visit[nx][ny][newgo]=true;
                        visit[sx][sy][go]=true;
                    }
                }
                sx=nx;
                sy=ny;
            }
        }
    }
}